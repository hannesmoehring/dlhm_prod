protocolVersion: 2
name: t2m_hm_usage_cb58ac1a
type: job
jobRetryCount: 0
prerequisites:
  - type: dockerimage
    uri: >-
      master.garching.cluster.campar.in.tum.de:10443/camp/ubuntu_20.04-python_3.8-cuda_11.3-pytorch_1.11-gpu:latest
    name: docker_image_0
taskRoles:
  taskrole:
    instances: 1
    completion:
      minFailedInstances: 1
    taskRetryCount: 0
    dockerImage: docker_image_0
    resourcePerInstance:
      gpu: 1
      cpu: 4
      memoryMB: 30000
    nodeSelectionPerInstance:
      - key: nvidia.com/gpu.memory
        operator: Gt
        values:
          - "0"
      - key: nvidia.com/gpu.compute.major
        operator: Gt
        values:
          - "0"
    commands:
      - nvidia-smi
      - echo "sudo installs + wait"
      - sudo apt install -y wget && \
      - >-
        sudo wget --quiet
        https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O
        ~/miniconda.sh && \
      - sudo /bin/bash ~/miniconda.sh -b -p /opt/conda && \
      - sudo rm -r ~/miniconda.sh
      - "sudo mount -o remount,size=8G /dev/shm"
      - sleep 3m
      - echo "starting copy"
      - rsync /mnt/projects/dlhm/mohringhannes/misc/local_conda.tar.gz .
      - echo "starting unpack"
      - mkdir unpacked_conda
      - tar -xzf local_conda.tar.gz -C unpacked_conda
      - cd
      - echo "starting conda env"
      - source /opt/conda/bin/activate unpacked_conda/
      - sleep 1m
      - cd
      - >-
        python -m pip install torch==1.11.0+cu113 torchvision==0.12.0+cu113
        torchaudio==0.11.0 --extra-index-url
        https://download.pytorch.org/whl/cu113
      - python -m pip install numpy==1.21
      - python -m pip install moviepy==1.0.3
      - >-
        printf "import ssl\nssl._create_default_https_context =
        ssl._create_unverified_context\n\n" | cat -
        /home/mohringhannes/unpacked_conda/lib/python3.8/site-packages/clip/clip.py
        > temp && mv temp
        /home/mohringhannes/unpacked_conda/lib/python3.8/site-packages/clip/clip.py
      - echo "getting everything."
      - >-
        rsync --progress
        /mnt/projects/dlhm/mohringhannes/dev/t2m/gpt_t2m_20250809-051810.zip .
      - unzip gpt_t2m_20250809-051810.zip
      - mkdir T2M-GPT/dataset
      - cd T2M-GPT/dataset
      - python -m gdown 1rmnG-R8wTb1sRs0PYp4RRmLg8XH-qSGW
      - unzip humanml3d.zip
      - mv humanml3d HumanML3D
      - cd
      - cp /mnt/projects/dlhm/mohringhannes/dev/t2m/run_t2m.py T2M-GPT/
      - python -m pip install h5py
      - python -m pip install shapely pyrender trimesh mapbox_earcut
      - cd
      - cd T2M-GPT
      - sed -i '5d' render_final.py
      - mkdir body_models
      - cd body_models
      - rsync /mnt/projects/dlhm/mohringhannes/dev/t2m/smpl.zip .
      - unzip smpl.zip
      - cd ..
      - echo "starting example run"
      - >-
        sed -i '183c\    import glob, os\n    filename_list = [f for f in
        sorted(glob.glob(os.path.join(args.filedir, "*"))) if
        f.endswith((".npy",".npz"))]' render_final.py
      - >-
        sed -i '188c\    \    motions = np.load(filedir + filename,
        allow_pickle=True)' render_final.py
      - >-
        sed -i '1i import os; os.environ.setdefault("PYRENDER_PLATFORM","egl");
        os.environ.setdefault("PYOPENGL_PLATFORM","egl");
        os.environ.pop("DISPLAY", None); os.environ["PYGLET_HEADLESS"]="1"'
        render_final.py
      - sed -i '193d' render_final.py
      - sed -i '193d' render_final.py
      - sed -i '193d' render_final.py
      - cd
      - cd T2M-GPT
      - python run_t2m.py "a man sprinting and jumping"
      - python run_t2m.py "a woman sprinting and jumping"
      - python run_t2m.py "a person sprinting and jumping"
      - python run_t2m.py "run then turn then hands over head then walk"
      - echo "example run over"
      - python render_final.py --filedir ../gen_output/ --motion-list 1
      - cd
      - zip -r "t2m_outputs_$(date +%Y%m%d-%H%M%S).zip" gen_output/
      - rsync t2m_outputs_*.zip /mnt/projects/dlhm/mohringhannes/dev/t2m/outputs
defaults:
  virtualCluster: default
extras:
  com.microsoft.pai.runtimeplugin:
    - plugin: ssh
      parameters:
        jobssh: true
        userssh:
          type: custom
          value: ""
    - plugin: teamwise_storage
      parameters:
        storageConfigNames:
          - ceph-datasets
          - ceph-home
          - ceph-projects
          - ceph-scratch
  jobStatusChangeNotification:
    running: false
    succeeded: false
    stopped: false
    failed: true
    retried: false
